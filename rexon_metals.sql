--
-- File generated with SQLiteStudio v3.4.1 on Fri Dec 23 15:04:02 2022
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: CUSTOMER
CREATE TABLE IF NOT EXISTS CUSTOMER (CUSTOMER_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, NAME TEXT NOT NULL, REGION TEXT, STREET_ADDRESS TEXT, CITY TEXT, STATE TEXT, ZIP INTEGER);
INSERT INTO CUSTOMER (CUSTOMER_ID, NAME, REGION, STREET_ADDRESS, CITY, STATE, ZIP) VALUES (1, 'LITE Industrial', 'Southwest', '729 Ravine Way', 'Irving', 'TX', 75014);
INSERT INTO CUSTOMER (CUSTOMER_ID, NAME, REGION, STREET_ADDRESS, CITY, STATE, ZIP) VALUES (2, 'Rex Tooling Inc', 'Southwest', '6129 Collie Blvd', 'Dallas', 'TX', 75201);
INSERT INTO CUSTOMER (CUSTOMER_ID, NAME, REGION, STREET_ADDRESS, CITY, STATE, ZIP) VALUES (3, 'Re-Barre Construction', 'Southwest', '9043 Windy Dr', 'Irving', 'TX', 75032);
INSERT INTO CUSTOMER (CUSTOMER_ID, NAME, REGION, STREET_ADDRESS, CITY, STATE, ZIP) VALUES (4, 'Prairie Construction', 'Southwest', '264 Long Rd', 'Moore', 'OK', 62104);
INSERT INTO CUSTOMER (CUSTOMER_ID, NAME, REGION, STREET_ADDRESS, CITY, STATE, ZIP) VALUES (5, 'Marsh Lane Metal Works', 'Southeast', '9143 Marsh Ln', 'Avondale', 'LA', 79782);

-- Table: CUSTOMER_ORDER
CREATE TABLE IF NOT EXISTS CUSTOMER_ORDER (ORDER_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ORDER_DATE DATE NOT NULL, SHIP_DATE DATE, CUSTOMER_ID INTEGER REFERENCES CUSTOMER (CUSTOMER_ID) NOT NULL, PRODUCT_ID INTEGER REFERENCES PRODUCT (PRODUCT_ID) NOT NULL, ORDER_QTY INTEGER NOT NULL, SHIPPED BOOLEAN NOT NULL DEFAULT (0));
INSERT INTO CUSTOMER_ORDER (ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, PRODUCT_ID, ORDER_QTY, SHIPPED) VALUES (1, '2015-05-15', '2015-05-18', 1, 1, 450, 'false');
INSERT INTO CUSTOMER_ORDER (ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, PRODUCT_ID, ORDER_QTY, SHIPPED) VALUES (2, '2015-05-18', '2015-05-21', 3, 2, 600, 'false');
INSERT INTO CUSTOMER_ORDER (ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, PRODUCT_ID, ORDER_QTY, SHIPPED) VALUES (3, '2015-05-20', '2015-05-23', 3, 5, 300, 'false');
INSERT INTO CUSTOMER_ORDER (ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, PRODUCT_ID, ORDER_QTY, SHIPPED) VALUES (4, '2015-05-18', '2015-05-22', 5, 4, 375, 'false');
INSERT INTO CUSTOMER_ORDER (ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, PRODUCT_ID, ORDER_QTY, SHIPPED) VALUES (5, '2015-05-17', '2015-05-20', 3, 2, 500, 'false');

-- Table: PRODUCT
CREATE TABLE IF NOT EXISTS PRODUCT (PRODUCT_ID INTEGER PRIMARY KEY AUTOINCREMENT, DESCRIPTION TEXT, PRICE DECIMAL);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (1, 'Copper', 7.51);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (2, 'Aluminum', 2.58);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (3, 'Silver', 15);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (4, 'Steel', 12.31);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (5, 'Bronze', 4);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (6, 'Duralumin', 7.6);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (7, 'Solder', 14.16);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (8, 'Stellite', 13.31);
INSERT INTO PRODUCT (PRODUCT_ID, DESCRIPTION, PRICE) VALUES (9, 'Brass', 4.75);

-- View: BEHIND_SCHEDULE
CREATE VIEW IF NOT EXISTS BEHIND_SCHEDULE AS SELECT * FROM CUSTOMER_ORDER 

WHERE SHIP_DATE < date('now')
AND SHIPPED = 'false';

-- View: CUSTOMER_REVENUE
CREATE VIEW IF NOT EXISTS CUSTOMER_REVENUE AS SELECT NAME, SUM(ORDER_QTY * PRICE) AS REVENUE FROM CUSTOMER INNER JOIN CUSTOMER_ORDER ON CUSTOMER.CUSTOMER_ID = CUSTOMER_ORDER.CUSTOMER_ID INNER JOIN PRODUCT ON PRODUCT.PRODUCT_ID = CUSTOMER_ORDER.PRODUCT_ID GROUP BY NAME;

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
